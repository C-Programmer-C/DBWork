// <auto-generated />
using DBWork.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBWork.Migrations
{
    [DbContext(typeof(StaffDbContext))]
    [Migration("20250224181543_AddFieldRole")]
    partial class AddFieldRole
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DBWork.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int")
                        .HasColumnName("director_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("DepartmentId");

                    b.HasIndex("DirectorId");

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("DBWork.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("Cost")
                        .HasColumnType("int")
                        .HasColumnName("cost");

                    b.Property<string>("FullnameClient")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fullname_client");

                    b.Property<string>("TimeExecution")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("time_execution");

                    b.HasKey("OrderId");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("DBWork.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("patronymic");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("surname");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telephone");

                    b.HasKey("StaffId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("staff", (string)null);
                });

            modelBuilder.Entity("DBWork.Models.StaffOrder", b =>
                {
                    b.Property<int>("OrderStaffId")
                        .HasColumnType("int")
                        .HasColumnName("order_staff_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    b.HasKey("OrderStaffId");

                    b.HasIndex("OrderId");

                    b.HasIndex("StaffId");

                    b.ToTable("staff_order", (string)null);
                });

            modelBuilder.Entity("DBWork.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("password");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("DBWork.Models.Department", b =>
                {
                    b.HasOne("DBWork.Models.Staff", "Director")
                        .WithMany("Departments")
                        .HasForeignKey("DirectorId")
                        .IsRequired()
                        .HasConstraintName("FK_department_staff");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("DBWork.Models.Staff", b =>
                {
                    b.HasOne("DBWork.Models.Department", "Department")
                        .WithMany("Staff")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_staff_department");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DBWork.Models.StaffOrder", b =>
                {
                    b.HasOne("DBWork.Models.Order", "Order")
                        .WithMany("StaffOrders")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_staff_order_order");

                    b.HasOne("DBWork.Models.Staff", "Staff")
                        .WithMany("StaffOrders")
                        .HasForeignKey("StaffId")
                        .IsRequired()
                        .HasConstraintName("FK_staff_order_staff");

                    b.Navigation("Order");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DBWork.Models.User", b =>
                {
                    b.HasOne("DBWork.Models.Staff", "UserNavigation")
                        .WithOne("User")
                        .HasForeignKey("DBWork.Models.User", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK_user_staff");

                    b.Navigation("UserNavigation");
                });

            modelBuilder.Entity("DBWork.Models.Department", b =>
                {
                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DBWork.Models.Order", b =>
                {
                    b.Navigation("StaffOrders");
                });

            modelBuilder.Entity("DBWork.Models.Staff", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("StaffOrders");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
